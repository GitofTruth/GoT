#!/usr/bin/env node

// goes to bare
// pushes to local storage
// hopefully executed on push command



const fs = require('fs');
const { join } = require("path")

let testpath = ".git/objects/"
let defStoragePath = "../../Storage/"
let excptList = ["info", "pack"]


function ListFiles(testFolder){
  let files = []
  fs.readdirSync(testFolder).forEach(file => {
    if( excptList.indexOf(file) > -1){
    }else {
      files = [... files, file]
      // console.log(file);
    }
  });

  return files
}


function GetObjectsName(objHomeDirectory) {
  let names = []
  let dirs = ListFiles(objHomeDirectory)
  dirs.forEach(d => {
    files = ListFiles(objHomeDirectory + d + "/")
    files.forEach(f => {
      names = [...names, d + f]
    })
  })

  return names;
}

function CopyObjects(namesList = [],pulling = true, sourcePath = defStoragePath){
  let destinationPath = "objects/"
  if (!pulling){
    let temp = sourcePath
    sourcePath = destinationPath
    destinationPath = temp
    fs.copyFileSync(sourcePath + "../refs/heads/master" , destinationPath + "../master")
  }else {
    fs.copyFileSync(sourcePath + "../master", destinationPath + "../refs/heads/master")
  }

  console.log("Starting copying files ... to storage")
  console.log("The source Path: " + sourcePath)
  console.log("The destination Path: " + destinationPath)
  let sourceObjs = GetObjectsName(sourcePath)
  let destinationObjs = GetObjectsName(destinationPath)
  let missing = []

  if (namesList.length <= 0){
    namesList = sourceObjs
  }

  if (namesList.length > 0){
    namesList.forEach(n => {
      if(destinationObjs.indexOf(n) == -1){
        missing = [...missing, n]
      }
    })
  }else{
    missing = namesList
  }

  console.log("Found source Objects: ")
  console.log(sourceObjs)
  console.log("Found destination objects Objects: ")
  console.log(destinationObjs)
  console.log("Missing destination Objects: ")
  console.log(missing)

  missing.forEach( m => {
    if (!fs.existsSync(destinationPath + m.substring(0,2))){
      fs.mkdirSync(destinationPath + m.substring(0,2));
    }
    if(!fs.existsSync(destinationPath + m.substring(0,2) + "/" + m.substring(2))){
      fs.copyFileSync(sourcePath + m.substring(0,2) + "/" + m.substring(2), destinationPath + m.substring(0,2) + "/" + m.substring(2)
      // , (err) => {
      // if (err) throw err;
      // console.log(m + " was added to bare repo");
      // }
    );
    }
  })
  console.log("Done copying files ... to storage\n\n")
}

CopyObjects([], false)
